{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(http) {\n    this.http = http;\n  }\n  addStudent(student) {\n    const apiUrl = 'http://localhost:8091/student/add-student';\n    return this.http.post(apiUrl, student);\n  }\n  allStudent() {\n    const apiUrl = 'http://localhost:8091/student/get-all-students';\n    return this.http.get(apiUrl);\n  }\n  getStudentById(id) {\n    const apiUrl = 'http://localhost:8091/student/get-student-by-id/' + id;\n    return this.http.get(apiUrl);\n  }\n  updateStudent(student) {\n    const apiUrl = 'http://localhost:8091/student/update-student';\n    return this.http.put(apiUrl, student);\n  }\n  deleteStudent(id) {\n    const apiUrl = 'http://localhost:8091/student/delete-student/' + id;\n    return this.http.delete(apiUrl, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function StudentService_Factory(t) {\n      return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StudentService,\n      factory: StudentService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["StudentService","constructor","http","addStudent","student","apiUrl","post","allStudent","get","getStudentById","id","updateStudent","put","deleteStudent","delete","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\WorkSpace\\Angular 635\\SAMSTRACK_NG-main\\src\\app\\services\\student.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  constructor(private http: HttpClient) { }\n\n  addStudent(student: any):Observable<any> {\n    const apiUrl='http://localhost:8091/student/add-student';\n    return this.http.post(apiUrl, student);\n  }\n\n  allStudent():Observable<any> {\n    const apiUrl='http://localhost:8091/student/get-all-students';\n    return this.http.get(apiUrl);\n  }\n\n  getStudentById(id: number):Observable<any> {\n    const apiUrl='http://localhost:8091/student/get-student-by-id/'+id;\n    return this.http.get(apiUrl);\n  }\n\n  updateStudent(student: any):Observable<any> {\n    const apiUrl='http://localhost:8091/student/update-student';\n    return this.http.put(apiUrl, student);\n  }\n\n  deleteStudent(id: number):Observable<any> {\n    const apiUrl='http://localhost:8091/student/delete-student/'+id;\n    return this.http.delete(apiUrl,{responseType: 'text'});\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAUA,CAACC,OAAY;IACrB,MAAMC,MAAM,GAAC,2CAA2C;IACxD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,MAAM,EAAED,OAAO,CAAC;EACxC;EAEAG,UAAUA,CAAA;IACR,MAAMF,MAAM,GAAC,gDAAgD;IAC7D,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAACH,MAAM,CAAC;EAC9B;EAEAI,cAAcA,CAACC,EAAU;IACvB,MAAML,MAAM,GAAC,kDAAkD,GAACK,EAAE;IAClE,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAACH,MAAM,CAAC;EAC9B;EAEAM,aAAaA,CAACP,OAAY;IACxB,MAAMC,MAAM,GAAC,8CAA8C;IAC3D,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAACP,MAAM,EAAED,OAAO,CAAC;EACvC;EAEAS,aAAaA,CAACH,EAAU;IACtB,MAAML,MAAM,GAAC,+CAA+C,GAACK,EAAE;IAC/D,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAACT,MAAM,EAAC;MAACU,YAAY,EAAE;IAAM,CAAC,CAAC;EACxD;;;uBA3BWf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdnB,cAAc;MAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}