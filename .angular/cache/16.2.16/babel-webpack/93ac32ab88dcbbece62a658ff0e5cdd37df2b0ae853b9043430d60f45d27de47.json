{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(user) {\n    const apiUrl = \"http://localhost:8091/user/login-user\";\n    return this.http.post(apiUrl, user);\n  }\n  registerUser(user) {\n    const apiUrl = \"http://localhost:8091/user/register-user\";\n    return this.http.post(apiUrl, user, {\n      'responseType': 'text'\n    });\n  }\n  getAllUser() {\n    const apiUrl = \"http://localhost:8091/user/get-all-user\";\n    return this.http.get(apiUrl);\n  }\n  getAllAdmins() {\n    const apiUrl = \"http://localhost:8091/user/get-all-admin\";\n    return this.http.get(apiUrl);\n  }\n  getAllFaculty() {\n    const apiUrl = \"http://localhost:8091/user/get-all-faculty\";\n    return this.http.get(apiUrl);\n  }\n  deleteUser(username) {\n    const apiUrl = `http://localhost:8091/user/delete-user-by-username?username=${username}`;\n    return this.http.delete(apiUrl, {\n      'responseType': 'text'\n    });\n  }\n  getUserByUsername(username) {\n    const apiUrl = `http://localhost:8091/user/get-user-by-username/${username}`;\n    return this.http.get(apiUrl);\n  }\n  updateUser(user) {\n    const apiUrl = \"http://localhost:8091/user/update-user\";\n    return this.http.put(apiUrl, user);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","http","login","user","apiUrl","post","registerUser","getAllUser","get","getAllAdmins","getAllFaculty","deleteUser","username","delete","getUserByUsername","updateUser","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\WorkSpace\\Angular 635\\SAMSTRACK_NG-main\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  login(user: any): Observable<any> {\n    const apiUrl = \"http://localhost:8091/user/login-user\";\n\n    return this.http.post(apiUrl, user);\n\n  }\n\n  registerUser(user: any): Observable<any> {\n    const apiUrl = \"http://localhost:8091/user/register-user\";\n\n    return this.http.post(apiUrl, user, { 'responseType': 'text' });\n\n  }\n\n\n  getAllUser(): Observable<any> {\n    const apiUrl = \"http://localhost:8091/user/get-all-user\";\n    return this.http.get(apiUrl);\n  }\n\n  getAllAdmins(): Observable<any> {\n    const apiUrl = \"http://localhost:8091/user/get-all-admin\";\n    return this.http.get(apiUrl);\n  }\n\n  getAllFaculty(): Observable<any> {\n    const apiUrl = \"http://localhost:8091/user/get-all-faculty\";\n    return this.http.get(apiUrl);\n  }\n\n  deleteUser(username: string): Observable<any> {\n    const apiUrl = `http://localhost:8091/user/delete-user-by-username?username=${username}`;\n    return this.http.delete(apiUrl, { 'responseType': 'text' })\n  }\n\n  getUserByUsername(username: string): Observable<any> {\n    const apiUrl = `http://localhost:8091/user/get-user-by-username/${username}`;\n\n    return this.http.get(apiUrl);\n  }\n\n\n  updateUser(user: any): Observable<any> {\n    const apiUrl = \"http://localhost:8091/user/update-user\";\n    return this.http.put(apiUrl, user)\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,IAAS;IACb,MAAMC,MAAM,GAAG,uCAAuC;IAEtD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,MAAM,EAAED,IAAI,CAAC;EAErC;EAEAG,YAAYA,CAACH,IAAS;IACpB,MAAMC,MAAM,GAAG,0CAA0C;IAEzD,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,MAAM,EAAED,IAAI,EAAE;MAAE,cAAc,EAAE;IAAM,CAAE,CAAC;EAEjE;EAGAI,UAAUA,CAAA;IACR,MAAMH,MAAM,GAAG,yCAAyC;IACxD,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAACJ,MAAM,CAAC;EAC9B;EAEAK,YAAYA,CAAA;IACV,MAAML,MAAM,GAAG,0CAA0C;IACzD,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAACJ,MAAM,CAAC;EAC9B;EAEAM,aAAaA,CAAA;IACX,MAAMN,MAAM,GAAG,4CAA4C;IAC3D,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAACJ,MAAM,CAAC;EAC9B;EAEAO,UAAUA,CAACC,QAAgB;IACzB,MAAMR,MAAM,GAAG,+DAA+DQ,QAAQ,EAAE;IACxF,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAACT,MAAM,EAAE;MAAE,cAAc,EAAE;IAAM,CAAE,CAAC;EAC7D;EAEAU,iBAAiBA,CAACF,QAAgB;IAChC,MAAMR,MAAM,GAAG,mDAAmDQ,QAAQ,EAAE;IAE5E,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAACJ,MAAM,CAAC;EAC9B;EAGAW,UAAUA,CAACZ,IAAS;IAClB,MAAMC,MAAM,GAAG,wCAAwC;IACvD,OAAO,IAAI,CAACH,IAAI,CAACe,GAAG,CAACZ,MAAM,EAAED,IAAI,CAAC;EACpC;;;uBAjDWJ,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXrB,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}